
@{
    ViewBag.Title = "Catalogues";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/Components/DataTables/datatables.min.css" rel="stylesheet" />
<script src="~/Content/Components/DataTables/datatables.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@8"></script>
<style>
    .swal-wide {
        width: 1000px !important;
    }
</style>
<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        @ViewBag.Title
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</section>

<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="col-md-6">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">List of @ViewBag.Title</h3>
                </div>
                <div class="box-body">

                    <p>
                        <button id="create-article" class="btn btn-success">Create Article Type</button>
                    </p>
                    <table class="table table-striped table-bordered display" style="width:100%" id="dt-articletype">
                        <thead>
                            <tr>
                                <td>Article Type ID</td>
                                <td>Name</td>
                            </tr>
                        </thead>
                        <tbody></tbody>
                        <tfoot>
                            <tr>
                                <td>Article Type ID</td>
                                <td>Name</td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
                <div class="overlay" hidden>
                    <i class="fa fa-refresh fa-spin"></i>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">List of @ViewBag.Title</h3>
                </div>
                <div class="box-body">

                    <p>
                        <button id="create-booktype" class="btn btn-success">Create Book Type</button>
                    </p>
                    <table class="table table-striped table-bordered display" style="width:100%" id="dt-booktype">
                        <thead>
                            <tr>
                                <td>Book Type ID</td>
                                <td>Name</td>
                            </tr>
                        </thead>
                        <tbody></tbody>
                        <tfoot>
                            <tr>
                                <td>Book Type ID</td>
                                <td>Name</td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
                <div class="overlay" hidden>
                    <i class="fa fa-refresh fa-spin"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">List of Academias</h3>
                </div>
                <div class="box-body">

                    <p>
                        <button id="create-academia" class="btn btn-success">Create Academia</button>
                    </p>
                    <table class="table table-striped table-bordered display" style="width:100%" id="dt-academia">
                        <thead>
                            <tr>
                                <td>Academia ID</td>
                                <td>Name</td>
                            </tr>
                        </thead>
                        <tbody></tbody>
                        <tfoot>
                            <tr>
                                <td>Academia ID</td>
                                <td>Name</td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
                <div class="overlay" hidden>
                    <i class="fa fa-refresh fa-spin"></i>
                </div>
            </div>
        </div>
    </div>

</section>

<script>
    $(document).ajaxStart(function () {
        $(".overlay").show();
    });
    $(document).ajaxStop (function () {
        $(".overlay").hide();
    });

    

    var dtarticle =null; 
    var dtacademia=null;
    var dtbooktype=null;
    function initArticleType() {
        $.ajax({
            url: '@Url.Action("GetArticlesTypes")',
            method: "GET",
            dataType: "json",
            success: function (data) {
                var results = data.ArticleTypes;
                dtarticle = $("#dt-articletype").DataTable({
                    data: results,
                    columns: [
                        {
                            "targets": -1,
                            "data": null,
                            "defaultContent":
                                "<a onclick='fnEditArtTyp(this)' class='btn btn-info'><i class='fa fa-pencil-square'></i></a> "+
                                "<a onclick='fnDeleteArtTyp(this)' class='btn btn-danger'><i class='fa fa-times-circle'></i></a>",
                            "width":"20%"
                        },
                        {'data': 'NAME'}
                    ],
                    responsive: true,
                    iDisplayLength: 15,
                    bDestroy: true
                })
            }
        })
    }

    function initBookTypes() {
        $.ajax({
            url: '@Url.Action("GetBookTypes")',
            method: "GET",
            dataType: "json",
            success: function (data) {
                var results = data.BookTypes;
                dtbooktype =  $("#dt-booktype").DataTable({
                    data: results,
                    columns: [
                        {
                            "targets": -1,
                            "data": null,
                            "defaultContent":
                                "<a onclick='fnEditBookTyp(this)' class='btn btn-info'><i class='fa fa-pencil-square'></i></a> " +
                                "<a onclick='fnDeleteBookTyp(this)' class='btn btn-danger'><i class='fa fa-times-circle'></i></a>",
                            "width": "20%"
                        },
                        {'data': 'NAME'}
                    ],
                    responsive: true,
                    iDisplayLength: 15,
                    bDestroy: true
                })
            }
        })
    }
    function initAcademia() {
        $.ajax({
            url: '@Url.Action("GetAcademias")',
            method: "GET",
            dataType: "json",
            success: function (data) {
                var results = data.Academias;
                dtacademia = $("#dt-academia").DataTable({
                    data: results,
                    columns: [
                        {
                            "targets": -1,
                            "data": null,
                            "defaultContent":
                                "<a onclick='fnEditAca(this)' class='btn btn-info'><i class='fa fa-pencil-square'></i></a> " +
                                "<a onclick='fnDeleteAca(this)' class='btn btn-danger'><i class='fa fa-times-circle'></i></a>",
                            "width": "20%"
                        },
                        {'data': 'NAME'}
                    ],
                    responsive: true,
                    iDisplayLength: 15,
                    bDestroy: true
                })
            }
        })
    }

    $(document).ready(function () {
        initBookTypes();
        initAcademia();
        initArticleType();
        $("#create-article").on("click", function () {
            Swal.fire({
                title: 'Create Article Type',
                input: 'text',
                showLoaderOnConfirm: true,
                showCancelButton: true,
                inputValidator: (value) => {
                    if (!value) {
                        return 'You need to write something!'
                    }
                    else {
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("CreateArticleType")',
                            data: { "name": value },
                            success: function (data) {
                                result = data.success;
                                error = data.error;
                                if (result) {
                                    Swal.fire({
                                        title: "Success",
                                        text: "Article type " + name + " created correctly",
                                        type: "success"
                                    })
                                    initArticleType();
                                }
                                else {
                                    Swal.fire({
                                        title: "Error",
                                        text: "There's been a error",
                                        type: "error"
                                    })
                                }
                            }
                        })
                    }
                }
            })
        });
        $("#create-academia").on("click", function () {
            Swal.fire({
                title: 'Create Academia',
                input: 'text',
                showLoaderOnConfirm: true,
                showCancelButton: true,
                inputValidator: (value) => {
                    if (!value) {
                        return 'You need to write something!'
                    }
                    else {
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("CreateAcademia")',
                            data: { "name": value },
                            success: function (data) {
                                result = data.success;
                                error = data.error;
                                if (result) {
                                    Swal.fire({
                                        title: "Success",
                                        text: "Academia " + name + " created correctly",
                                        type: "success"
                                    })
                                    initAcademia();
                                }
                                else {
                                    Swal.fire({
                                        title: "Error",
                                        text: "There's been a error",
                                        type: "error"
                                    })
                                }
                            }
                        })
                    }
                }
            })
        });

        $("#create-booktype").on("click", function () {
            Swal.fire({
                title: 'Create Book Type',
                input: 'text',
                showLoaderOnConfirm: true,
                showCancelButton: true,
                inputValidator: (value) => {
                    if (!value) {
                        return 'You need to write something!'
                    }
                    else {
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("CreateBookType")',
                            data: { "name": value },
                            success: function (data) {
                                result = data.success;
                                error = data.error;
                                if (result) {
                                    Swal.fire({
                                        title: "Success",
                                        text: "Book Type " + name + " created correctly",
                                        type: "success"
                                    })
                                    initBookTypes();
                                }
                                else {
                                    Swal.fire({
                                        title: "Error",
                                        text: "There's been a error",
                                        type: "error"
                                    })
                                }
                            }
                        })
                    }
                }
            })
        })
    });
    
    function fnDeleteArtTyp(val) {
        var data = dtarticle.row($(val).parents('tr')).data();
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            type: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.value) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DeleteArticleType")',
                    data: { "id": data["ARTICLE_TYPE_ID"] },
                    success: function (data) {
                        result = data.success;
                        error = data.error;
                        if (result) {
                            Swal.fire({
                                title: "Success",
                                text: "Article type " + name + " created correctly",
                                type: "success"
                            })
                            initArticleType();
                        }
                        else {
                            Swal.fire({
                                title: "Error",
                                text: "There's been a error",
                                type: "error"
                            })
                        }
                    }
                })
                Swal.fire(
                    'Deleted!',
                    ' has been deleted.',
                    'success'
                )
            }
        })
    }


    function fnDeleteAca(val) {
        var data = dtacademia.row($(val).parents('tr')).data();
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            type: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.value) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DeleteAcademia")',
                    data: { "id": data["ACADEMIA_ID"] },
                    success: function (data) {
                        result = data.success;
                        error = data.error;
                        if (result) {
                            Swal.fire({
                                title: "Success",
                                text: "Academia " + name + " deleted correctly",
                                type: "success"
                            })
                            initAcademia();
                        }
                        else {
                            Swal.fire({
                                title: "Error",
                                text: "There's been a error",
                                type: "error"
                            })
                        }
                    }
                })
                Swal.fire(
                    'Deleted!',
                    ' has been deleted.',
                    'success'
                )
            }
        })
    }

    function fnEditArtTyp(val) {
        var data = dtarticle.row($(val).parents('tr')).data();
        var name = data["NAME"];
        Swal.fire({
            title: 'Create Article Type',
            input: "text",
            inputValue: name,
            showLoaderOnConfirm: true,
            showCancelButton: true,
            inputValidator: (value) => {
                if (!value) {
                    return 'You need to write something!'
                }
                else {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("UpdateArticleType")',
                        data: { "name": value, "id": data["ARTICLE_TYPE_ID"] },
                        success: function (data) {
                            result = data.success;
                            error = data.error;
                            if (result) {
                                Swal.fire({
                                    title: "Success",
                                    text: "Article type " + name + " has been updated correctly",
                                    type: "success"
                                })
                                initArticleType();
                            }
                            else {
                                Swal.fire({
                                    title: "Error",
                                    text: "There's been a error",
                                    type: "error"
                                })
                            }
                        }
                    })
                }
            }
            
        })
    }

    function fnEditBookTyp(val) {
        var data = dtbooktype.row($(val).parents('tr')).data();
        var name = data["NAME"];
        Swal.fire({
            title: 'Edit Book Type',
            input: "text",
            inputValue: name,
            showLoaderOnConfirm: true,
            showCancelButton: true,
            inputValidator: (value) => {
                if (!value) {
                    return 'You need to write something!'
                }
                else {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("UpdateBookType")',
                        data: { "name": value, "id": data["BOOK_TYPE_ID"] },
                        success: function (data) {
                            result = data.success;
                            error = data.error;
                            if (result) {
                                Swal.fire({
                                    title: "Success",
                                    text: "Book type " + name + " has been updated correctly",
                                    type: "success"
                                })
                                initBookTypes();
                            }
                            else {
                                Swal.fire({
                                    title: "Error",
                                    text: "There's been a error",
                                    type: "error"
                                })
                            }
                        }
                    })
                }
            }
            
        })
    }

    function fnEditAca(val) {
        var data = dtacademia.row($(val).parents('tr')).data();
        var name = data["NAME"];
        Swal.fire({
            title: 'Create Article Type',
            input: "text",
            inputValue: name,
            showLoaderOnConfirm: true,
            showCancelButton: true,
            inputValidator: (value) => {
                if (!value) {
                    return 'You need to write something!'
                }
                else {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("UpdateAcademia")',
                        data: { "name": value, "id": data["ACADEMIA_ID"] },
                        success: function (data) {
                            result = data.success;
                            error = data.error;
                            if (result) {
                                Swal.fire({
                                    title: "Success",
                                    text: "Academia " + name + " has been updated correctly",
                                    type: "success"
                                })
                                initAcademia();
                            }
                            else {
                                Swal.fire({
                                    title: "Error",
                                    text: "There's been a error",
                                    type: "error"
                                })
                            }
                        }
                    })
                }
            }
            
        })
    }


    function fnDeleteBookTyp(val) {
        var data = dtbooktype.row($(val).parents('tr')).data();
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            type: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.value) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DeleteBookType")',
                    data: { "id": data["BOOK_TYPE_ID"] },
                    success: function (data) {
                        result = data.success;
                        error = data.error;
                        if (result) {
                            Swal.fire({
                                title: "Success",
                                text: "Book type " + name + " created correctly",
                                type: "success"
                            })
                            initBookTypes();
                        }
                        else {
                            Swal.fire({
                                title: "Error",
                                text: "There's been a error",
                                type: "error"
                            })
                        }
                    }
                })
                Swal.fire(
                    'Deleted!',
                    ' has been deleted.',
                    'success'
                )
            }
        })
    }

</script>
